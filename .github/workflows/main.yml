# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  schedule:
      - cron:  '0 11 * * *' # 11am daily. Ref https://crontab.guru/examples.html
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        # run: echo Hello, world!
        # run: curl https://path/to/file -o path/to/save
        # Doesn't work for scrap. Try: https://next.github.com/projects/flat-data
        # run: curl https://partner.exploregeorgia.org/api/export/camera-ready?output=json&client=cameraready&key=XV3DSxsk -o cameraready.json
        # Works
        # run: curl https://model.earth/io/build/api/sectorcrosswalk.csv -o sectorcrosswalk.csv
        run: |
          curl https://data.alltheplaces.xyz/runs/2021-12-11-13-32-30/output.tar.gz -o alltheplaces.tar.gz
          tar -xvzf alltheplaces.tar.gz

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
      
      # Copied from scrapper: https://github.com/abrie/atl-council-scraper/actions/runs/1572551131/workflow
      - name: Commit changes
        run: |
          git config user.name "Automated scrape commit."
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Updated scraped data: ${timestamp}" || exit 0
          git push
